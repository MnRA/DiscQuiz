{"version":3,"sources":["disc_quiz/navigation.cljs"],"mappings":";AAUA,AAAA,AAACA,AAEA,AAAKC;AAAL,AACE,AAACC,AAAMC,AAAeF;;AAEzB,AAAA,AAACG,AAEA,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASG;AAAT,AAAAF,AAAAD,AAAA,AAAA,AAAWI;AAAX,AACE,AAAMC,AAAY,AAAA,AAAgBH;AAC5BI,AAAY,AAACC,AAAsB,AAAA,AAAcF,AAAWD;AADlE,AAEE,AAAA,AAACI,AAAMN,AAAkB,AAAA,AAACM,AAAMJ,AAAuBE;;AAE5D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKG,AAIWC,AAGD;AAAOC;AAAP,AAAc,AAAA,AAACC;;;AAARD;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;AAPtB,AASc;AAAOA;AAAP,AAAe,AAAA,AAACC;;;AAATD;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;AATrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAYgBE,AAGF;AAAOF;AAAP,AAAe,AAAA,AAACC;;;AAATD;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;AAfrB,AAgBc;AAAOA;AAAP,AAAe,AAAA,AAACC;;;AAATD;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;AAhBrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAmBgBG,AAKF,AAAKH;AAAL,AACE,AAAA,AAAA,AAACI,AAAgC,AAAA,AAAA,AAAA,AAACC,AAAOL;AAzBzD,AA0Bc;AAAOA;AAAP,AAAe,AAAA,AAACC;;;AAATD;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;AA1BrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AA6BgBM;AAGhB,AAAA,AAAMC,AAAad;AAAnB,AACE,AAAMA;AAAN,AACE,AAAA,AAAA,AAACW,AAA+BX;;AADlC;;;AAGF,AAAKe,AACH,AAAA,AAAA,AAAA,AAAA,AAACC,AACAX,AACkBY;AAErB,AAAA,AAAMC;AAAN,AACE,AAAA,AAACV;;AACD,AAAA,AAAA,AAAA,AAACW,AACAJ,AACAD","names":["re-frame.core/reg-fx","route","cljs.core.apply","reitit.frontend.easy/push-state","re_frame.core.reg_event_db","p__55575","vec__55576","cljs.core.nth","db","_","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","cljs.core.assoc","disc-quiz.navigation/routes","disc-quiz.views/home-page","params","js/console.log","disc-quiz.views/quiz-index","disc-quiz.views/quiz-show","re-frame.core/dispatch","cljs.core.get_in","disc-quiz.views/results-index","disc-quiz.navigation/on-navigate","disc-quiz.navigation/router","reitit.frontend.router","reitit.coercion.spec/coercion","disc-quiz.navigation/init-routes!","reitit.frontend.easy/start!"],"sourcesContent":["(ns disc-quiz.navigation\n  (:require [disc-quiz.views :as views]\n            [re-frame.core :as re-frame]\n            [reitit.core :as r]\n            [reitit.coercion.spec :as rss]\n            [reitit.frontend :as rf]\n            [reitit.frontend.controllers :as rfc]\n            [reitit.frontend.easy :as rfe]))\n\n\n(re-frame/reg-fx\n :push-state\n (fn [route]\n   (apply rfe/push-state route)))\n\n(re-frame/reg-event-db\n ::navigated\n (fn [db [_ new-match]]\n   (let [old-match   (:current-route db)\n         controllers (rfc/apply-controllers (:controllers old-match) new-match)]\n     (assoc db :current-route (assoc new-match :controllers controllers)))))\n\n(def routes\n  [\"/\"\n   [\"\"\n    {:name      :home\n     :view      views/home-page\n     :link-text \"Home\"\n     :controllers\n     [{ :start (fn [& params](js/console.log \"Entering home page\"))\n\n       :stop  (fn [& params] (js/console.log \"Leaving home page\"))}]}]\n   [\"quizzes/\"\n    {:name      :quizzes/index\n     :view      views/quiz-index\n     :link-text \"Quizzes!\"\n     :controllers\n     [{:start (fn [& params] (js/console.log \"Entering sub-page 1\"))\n       :stop  (fn [& params] (js/console.log \"Leaving sub-page 1\"))}]}]\n   [\"quizzes/:quiz-name\"\n    {:name      :quizzes/show\n     :view      views/quiz-show\n     :link-text \"Quiz\"\n\n     :controllers\n     [{:parameters {:path [:quiz-name]}\n       :start (fn [params]\n                (re-frame/dispatch [:update-quiz (get-in params [:path :quiz-name])]))\n       :stop  (fn [& params] (js/console.log \"Leaving sub-page 2\"))}]}]\n   [\"results/\"\n    {:name      :results/index\n     :view      views/results-index\n     :link-text \"Results\"}]])\n\n(defn on-navigate [new-match]\n  (when new-match\n    (re-frame/dispatch [::navigated new-match])))\n\n(def router\n  (rf/router\n   routes\n   {:data {:coercion rss/coercion}}))\n\n(defn init-routes! []\n  (js/console.log \"initializing routes\")\n  (rfe/start!\n   router\n   on-navigate\n   {:use-fragment true}))\n"]}